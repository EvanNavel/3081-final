<h1>Games</h1>
<div>
  <%= form_tag games_path, method: :get, class: "form-inline mb-3" do %>
    <div class="form-group">
      <%= label_tag :search, "Search for a game by title:", class: "mr-2" %>
      <%= text_field_tag :search, params[:search], placeholder: "Enter game title", class: "form-control mr-2" %>
      <%= submit_tag "Search", class: "btn btn-primary" %>
    </div>
  <% end %>
</div>
<table class="table" id="gamesTable">
  <thead>
    <tr>
    <th onclick="sortTable(0)" style="cursor: pointer; text-decoration: underline; color: blue;">Title</th>
    <th onclick="sortTable(1)" style="cursor: pointer; text-decoration: underline; color: blue;">System</th>
    <th onclick="sortTable(2)" style="cursor: pointer; text-decoration: underline; color: blue;">Genre</th>
    <th onclick="sortTable(3)" style="cursor: pointer; text-decoration: underline; color: blue;">Cost</th>
    <th onclick="sortTable(4)" style="cursor: pointer; text-decoration: underline; color: blue;">Manufacturer</th>
    <th onclick="sortTable(5)" style="cursor: pointer; text-decoration: underline; color: blue;">Condition</th>
      <th>Details</th>
    </tr>
  </thead>
  <tbody>
    <% @games.each do |game| %>
      <tr>
        <td><%= game.title %></td>
        <td><%= game.system.name %></td>
        <td><%= game.genre %></td>
        <td><%= number_to_currency(game.cost) %></td>
        <td><%= game.manufacturer %></td>
        <td><%= game.condition %></td>
        <td><%= link_to 'View', game_path(game), class: 'btn btn-info' %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<script>
function sortTable(columnIndex) {
  var table, rows, switching, i, x, y, shouldSwitch;
  table = document.getElementById("gamesTable");
  switching = true;
  while (switching) {
    switching = false;
    rows = table.rows;
    for (i = 1; i < (rows.length - 1); i++) {
      shouldSwitch = false;
      x = rows[i].getElementsByTagName("td")[columnIndex];
      y = rows[i + 1].getElementsByTagName("td")[columnIndex];
      if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
        shouldSwitch= true;
        break;
      }
    }
    if (shouldSwitch) {
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
    }
  }
}
</script>
